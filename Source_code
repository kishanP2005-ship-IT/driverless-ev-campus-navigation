int ENA = 10;
int IN1 = 5;
int IN2 = 4;
int IN3 = 3;
int IN4 = 2;
int ENB = 9;
int buzzer = 8;

int rightSensor = A0;
int centerSensor = A1;
int leftSensor = A2;


int trigPin = 6;
int echoPin = 7;
void setup() {

  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(ENA, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  pinMode(ENB, OUTPUT);


  pinMode(leftSensor, INPUT);
  pinMode(centerSensor, INPUT);
  pinMode(rightSensor, INPUT);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(buzzer, OUTPUT);

  Serial.begin(9600); 

  analogWrite(ENA, 100);
  analogWrite(ENB,100);
  delay(200);
}

void loop() {
  long distance = getDistance();

  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");


  if (distance < 20) {
    Stop();


    digitalWrite(buzzer, HIGH); 
   
    return; 
  } 
  else if (distance < 40) {

    digitalWrite(buzzer, HIGH);
    delay(100);
    digitalWrite(buzzer, LOW);

 
  } 
  else {
    digitalWrite(buzzer, LOW);   
  }


  int left = digitalRead(leftSensor);
  int center = digitalRead(centerSensor);
  int right = digitalRead(rightSensor);

  if (left == 0 && center == 1 && right == 0) {
    forward();
  } 
  else if ((left == 1 && center == 1 && right == 0) || (left == 1 && center == 0 && right == 0)) {
    turnRight();
  } 
  else if ((left == 0 && center == 1 && right == 1) || (left == 0 && center == 0 && right == 1)) {
    turnLeft();
  } 
  else if (left == 1 && center == 1 && right == 1) {
    Stop();
    delay(3000);
    forward();
    delay(4000);
  }
  else if(left == 0 && center == 0 && right == 0){
    Stop();
  }
  
}


void forward() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}

void turnRight() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}

void turnLeft() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
}

void Stop() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
}

long getDistance() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  long duration = pulseIn(echoPin, HIGH, 30000);
  if (duration == 0) return 999;

  return duration * 0.034 / 2; // Distance in cm
}



